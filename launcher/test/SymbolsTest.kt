import com.genir.aitweaks.launcher.loading.Symbols
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test

class SymbolsTest {
    @Test
    fun symbols() {
        val s = Symbols()

        assertEquals("com.fs.starfarer.combat.ai.movement.A", s.flockingAI.name)
        assertEquals("com.fs.starfarer.combat.ai.movement.maneuvers.B", s.approachManeuver.name)
        assertEquals("com.fs.starfarer.combat.ai.attack.D", s.autofireManager.name)
        assertEquals("com.fs.starfarer.combat.ai.movement.maneuvers.M", s.maneuver.name)
        assertEquals("com.fs.starfarer.combat.entities.Ship\$Oo", s.shipCommandWrapper.name)
        assertEquals("com.fs.starfarer.combat.entities.Ship\$oo", s.shipCommand.name)
        assertEquals("com.fs.starfarer.combat.E.B", s.combatEntity.name)
        assertEquals("com.fs.starfarer.combat.systems.o00O", s.weapon.name)
        assertEquals("com.fs.starfarer.combat.entities.ship.trackers.oOOO", s.aimTracker.name)
        assertEquals("com.fs.starfarer.ui.n", s.button.name)
        assertEquals("com.fs.starfarer.title.OoOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.OoOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\$oo", s.playerAction.name)
        assertEquals("com.fs.starfarer.title.OoOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.OoOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", s.keymap.name)
        assertEquals("com.fs.starfarer.combat.ai.E", s.fighterPullbackModule.name)
        assertEquals("com.fs.starfarer.combat.ai.system.M", s.systemAI.name)
        assertEquals("com.fs.starfarer.combat.ai.F", s.shieldAI.name)
        assertEquals("com.fs.starfarer.combat.ai.new", s.ventModule.name)
        assertEquals("com.fs.starfarer.combat.ai.D", s.threatEvaluator.name)
        assertEquals("com.fs.starfarer.combat.ai.D\$o", s.threatResponseManeuver.name)
        assertEquals("com.fs.starfarer.combat.A.B", s.combatMap.name)
        assertEquals("com.fs.starfarer.title.Object.L", s.missionDefinition.name)
        assertEquals("com.fs.starfarer.title.Object.L\$Oo", s.missionDefinitionPluginContainer.name)
        assertEquals("com.fs.starfarer.combat.entities.ship.A.oOoO", s.beamWeapon.name)
        assertEquals("com.fs.starfarer.combat.entities.ship.A.if", s.projectileWeapon.name)
        assertEquals("com.fs.starfarer.combat.ai.Q", s.frontShieldAI.name)
        assertEquals("com.fs.starfarer.combat.ai.O0oOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", s.omniShieldAI.name)
        assertEquals("com.fs.starfarer.combat.E.o0OO", s.bounds.name)
        assertEquals("com.fs.starfarer.combat.E.o0OO\$o", s.boundsSegment.name)
        assertEquals("com.fs.starfarer.combat.CombatFleetManager\$O0", s.deployedFleetMember.name)
        assertEquals("com.fs.starfarer.combat.entities.ship.trackers.D", s.beamChargeTracker.name)
        assertEquals("com.fs.starfarer.combat.entities.ship.trackers.OOoO", s.beamWeaponState.name)

        assertEquals("o00000", s.autofireManager_advance.name)
        assertEquals("Ò00000", s.shipCommandWrapper_command.name)
        assertEquals("o00000", s.maneuver_getTarget.name)
        assertEquals("new", s.aimTracker_setTargetOverride.name)
        assertEquals("Ø00000", s.keymap_isKeyDown.name)
        assertEquals("o00000", s.attackAIModule_advance.name)
        assertEquals("super", s.fighterPullbackModule_advance.name)
        assertEquals("o00000", s.systemAI_advance.name)
        assertEquals("o00000", s.shieldAI_advance.name)
        assertEquals("super", s.ventModule_advance.name)
        assertEquals("Ó00000", s.threatEvaluator_advance.name)
        assertEquals("Ò00000", s.flockingAI_setDesiredHeading.name)
        assertEquals("o00000", s.flockingAI_setDesiredFacing.name)
        assertEquals("Õ00000", s.flockingAI_setDesiredSpeed.name)
        assertEquals("Ô00000", s.flockingAI_advanceCollisionAnalysisModule.name)
        assertEquals("Õ00000", s.flockingAI_getMissileDangerDir.name)
        assertEquals("Ø00000", s.flockingAI_getCollisionDangerDir.name)
        assertEquals("String", s.combatMap_getPluginContainers.name)
        assertEquals("Ô00000", s.missionDefinitionPluginContainer_getEveryFrameCombatPlugin.name)
        assertEquals("super", s.loadingUtils_loadSpec.name)
        assertEquals("Ó00000", s.beamChargeTracker_getState.name)
    }
}
